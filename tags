!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
CCFLAGS	Makefile	/^      CCFLAGS   := -arch $(OS_ARCH) $/;"	m
CCFLAGS	Makefile	/^      CCFLAGS   := -m32$/;"	m
CCFLAGS	Makefile	/^      CCFLAGS   := -m64$/;"	m
CUDA_BIN_PATH	Makefile	/^CUDA_BIN_PATH   ?= $(CUDA_PATH)\/bin$/;"	m
CUDA_INC_PATH	Makefile	/^CUDA_INC_PATH   ?= $(CUDA_PATH)\/include$/;"	m
CUDA_LIB_PATH	Makefile	/^    CUDA_LIB_PATH  ?= $(CUDA_PATH)\/lib$/;"	m
CUDA_LIB_PATH	Makefile	/^    CUDA_LIB_PATH  ?= $(CUDA_PATH)\/lib64$/;"	m
CUDA_LIB_PATH	Makefile	/^  CUDA_LIB_PATH  ?= $(CUDA_PATH)\/lib$/;"	m
CUDA_PATH	Makefile	/^CUDA_PATH       ?= \/usr\/local\/cuda-5.0$/;"	m
DARWIN	Makefile	/^DARWIN = $(strip $(findstring DARWIN, $(OSUPPER)))$/;"	m
EXTRA_LDFLAGS	Makefile	/^EXTRA_LDFLAGS   ?=$/;"	m
EXTRA_NVCCFLAGS	Makefile	/^EXTRA_NVCCFLAGS ?=$/;"	m
FILE	stdio-wrapper.h	42;"	d
GCC	Makefile	/^GCC             ?= g++$/;"	m
GENCODE_FLAGS	Makefile	/^GENCODE_FLAGS   := $(GENCODE_SM10) $(GENCODE_SM20) $(GENCODE_SM30)$/;"	m
GENCODE_SM10	Makefile	/^GENCODE_SM10    := -gencode arch=compute_10,code=sm_10$/;"	m
GENCODE_SM20	Makefile	/^GENCODE_SM20    := -gencode arch=compute_20,code=sm_20$/;"	m
GENCODE_SM30	Makefile	/^GENCODE_SM30    := -gencode arch=compute_30,code=sm_30 -gencode arch=compute_35,code=sm_35$/;"	m
HEADERS	Makefile	/^HEADERS := stdio-wrapper.h image.h haar.h$/;"	m
INCLUDES	Makefile	/^INCLUDES      := -I$(CUDA_INC_PATH) -I. -I.. -I..\/..\/common\/inc$/;"	m
INPUT_FILENAME	main.cpp	40;"	d	file:
LDFLAGS	Makefile	/^      LDFLAGS   := -L$(CUDA_LIB_PATH) -lcudart$/;"	m
LDFLAGS	Makefile	/^      LDFLAGS   := -Xlinker -rpath $(CUDA_LIB_PATH) -L$(CUDA_LIB_PATH) -lcudart$/;"	m
MAXLABELS	haar.h	43;"	d
MyImage	image.h	/^MyImage;$/;"	t	typeref:struct:__anon3
MyIntImage	image.h	/^MyIntImage;$/;"	t	typeref:struct:__anon4
MyPoint	haar.h	/^MyPoint;$/;"	t	typeref:struct:MyPoint
MyPoint	haar.h	/^typedef struct MyPoint$/;"	s
MyRect	haar.h	/^MyRect;$/;"	t	typeref:struct:__anon2
MySize	haar.h	/^MySize;$/;"	t	typeref:struct:__anon1
NVCC	Makefile	/^NVCC            ?= $(CUDA_BIN_PATH)\/nvcc$/;"	m
NVCCFLAGS	Makefile	/^      NVCCFLAGS := -m32$/;"	m
NVCCFLAGS	Makefile	/^      NVCCFLAGS := -m64$/;"	m
OSLOWER	Makefile	/^OSLOWER = $(shell uname -s 2>\/dev\/null | tr [:upper:] [:lower:])$/;"	m
OSUPPER	Makefile	/^OSUPPER = $(shell uname -s 2>\/dev\/null | tr [:lower:] [:upper:])$/;"	m
OS_ARCH	Makefile	/^	OS_ARCH = i686$/;"	m
OS_ARCH	Makefile	/^	OS_ARCH = x86_64$/;"	m
OS_ARCH	Makefile	/^OS_ARCH = $(shell uname -m | sed -e "s\/i386\/i686\/")$/;"	m
OS_SIZE	Makefile	/^	OS_SIZE = 32$/;"	m
OS_SIZE	Makefile	/^	OS_SIZE = 64$/;"	m
OS_SIZE	Makefile	/^OS_SIZE = $(shell uname -m | sed -e "s\/i.86\/32\/" -e "s\/x86_64\/64\/")$/;"	m
OUTPUT_FILENAME	main.cpp	41;"	d	file:
STDIO_WRAPPER_INCLUDED	stdio-wrapper.h	35;"	d
SYSACE_FILE	stdio-wrapper.h	68;"	d
TARGET	Makefile	/^      TARGET    := debug$/;"	m
TARGET	Makefile	/^      TARGET    := release$/;"	m
VERBOSE	stdio-wrapper.h	37;"	d
__HAAR_H__	haar.h	35;"	d
__IMAGE_H__	image.h	35;"	d
cpyPgm	image.c	/^int cpyPgm(MyImage* src, MyImage* dst)$/;"	f
createImage	image.c	/^void createImage(int width, int height, MyImage *image)$/;"	f
createSumImage	image.c	/^void createSumImage(int width, int height, MyIntImage *image)$/;"	f
data	image.h	/^	int* data;$/;"	m	struct:__anon4
data	image.h	/^	unsigned char* data;$/;"	m	struct:__anon3
drawRectangle	rectangles.cpp	/^void drawRectangle(MyImage* image, MyRect r)$/;"	f
fclose	stdio-wrapper.h	44;"	d
feof	stdio-wrapper.h	54;"	d
fgetc	stdio-wrapper.h	49;"	d
fgets	stdio-wrapper.h	52;"	d
flag	image.h	/^	int flag;$/;"	m	struct:__anon3
flag	image.h	/^	int flag;$/;"	m	struct:__anon4
fopen	stdio-wrapper.h	43;"	d
fprintf	stdio-wrapper.h	56;"	d
fputc	stdio-wrapper.h	51;"	d
fputs	stdio-wrapper.h	53;"	d
fread	stdio-wrapper.h	45;"	d
freeImage	image.c	/^int freeImage(MyImage* image)$/;"	f
freeSumImage	image.c	/^int freeSumImage(MyIntImage* image)$/;"	f
fseek	stdio-wrapper.h	48;"	d
ftell	stdio-wrapper.h	47;"	d
fwrite	stdio-wrapper.h	46;"	d
groupRectangles	rectangles.cpp	/^void groupRectangles(std::vector<MyRect>& rectList, int groupThreshold, float eps)$/;"	f
height	haar.h	/^    int height;$/;"	m	struct:__anon1
height	haar.h	/^    int height;$/;"	m	struct:__anon2
height	image.h	/^	int height;$/;"	m	struct:__anon3
height	image.h	/^	int height;$/;"	m	struct:__anon4
inv_window_area	haar.h	/^    int inv_window_area;$/;"	m	struct:myCascade
itochar	image.c	/^void itochar(int x, char* szBuffer, int radix)$/;"	f
main	main.cpp	/^int main (int argc, char *argv[]) $/;"	f
maxgrey	image.h	/^	int maxgrey;$/;"	m	struct:__anon3
myAbs	rectangles.cpp	/^int myAbs(int n)$/;"	f
myCascade	haar.h	/^typedef struct myCascade$/;"	s
myCascade	haar.h	/^} myCascade;$/;"	t	typeref:struct:myCascade
myMax	rectangles.cpp	/^int myMax(int a, int b)$/;"	f
myMin	rectangles.cpp	/^int myMin(int a, int b)$/;"	f
myRound	rectangles.cpp	/^inline  int  myRound( float value )$/;"	f
myatoi	image.c	/^int myatoi (char* string)$/;"	f
n_stages	haar.h	/^    int  n_stages;$/;"	m	struct:myCascade
orig_window_size	haar.h	/^    MySize orig_window_size;$/;"	m	struct:myCascade
p0	haar.h	/^    sumtype *p0, *p1, *p2, *p3;$/;"	m	struct:myCascade
p1	haar.h	/^    sumtype *p0, *p1, *p2, *p3;$/;"	m	struct:myCascade
p2	haar.h	/^    sumtype *p0, *p1, *p2, *p3;$/;"	m	struct:myCascade
p3	haar.h	/^    sumtype *p0, *p1, *p2, *p3;$/;"	m	struct:myCascade
partition	rectangles.cpp	/^int partition(std::vector<MyRect>& _vec, std::vector<int>& labels, float eps)$/;"	f
pq0	haar.h	/^    sqsumtype *pq0, *pq1, *pq2, *pq3;$/;"	m	struct:myCascade
pq1	haar.h	/^    sqsumtype *pq0, *pq1, *pq2, *pq3;$/;"	m	struct:myCascade
pq2	haar.h	/^    sqsumtype *pq0, *pq1, *pq2, *pq3;$/;"	m	struct:myCascade
pq3	haar.h	/^    sqsumtype *pq0, *pq1, *pq2, *pq3;$/;"	m	struct:myCascade
predicate	rectangles.cpp	/^int predicate(float eps, MyRect& r1, MyRect& r2)$/;"	f
printf	stdio-wrapper.h	55;"	d
putc	stdio-wrapper.h	50;"	d
readPgm	image.c	/^int readPgm(char *fileName, MyImage *image)$/;"	f
scale	haar.h	/^    float scale; $/;"	m	struct:myCascade
setImage	image.c	/^void setImage(int width, int height, MyImage *image)$/;"	f
setSumImage	image.c	/^void setSumImage(int width, int height, MyIntImage *image)$/;"	f
sqsum	haar.h	/^    MyIntImage sqsum;$/;"	m	struct:myCascade
sqsumtype	haar.h	/^typedef int sqsumtype;$/;"	t
strrev	image.c	/^char* strrev(char* str)$/;"	f
sum	haar.h	/^    MyIntImage sum;$/;"	m	struct:myCascade
sumtype	haar.h	/^typedef  int sumtype;$/;"	t
sysace_fclose	stdio-wrapper.h	70;"	d
sysace_feof	stdio-wrapper.c	/^int sysace_feof(SYSACE_FILE *stream)$/;"	f
sysace_feof	stdio-wrapper.h	79;"	d
sysace_fgetc	stdio-wrapper.c	/^int sysace_fgetc(SYSACE_FILE *stream)$/;"	f
sysace_fgetc	stdio-wrapper.h	75;"	d
sysace_fgets	stdio-wrapper.c	/^ char * sysace_fgets(char *s, int n, SYSACE_FILE *iop)$/;"	f
sysace_fgets	stdio-wrapper.h	77;"	d
sysace_fopen	stdio-wrapper.h	69;"	d
sysace_fputs	stdio-wrapper.c	/^int sysace_fputs(const char *s, SYSACE_FILE *iop)$/;"	f
sysace_fputs	stdio-wrapper.h	78;"	d
sysace_fread	stdio-wrapper.h	71;"	d
sysace_fseek	stdio-wrapper.c	/^int sysace_fseek(SYSACE_FILE *stream, long offset, int whence)$/;"	f
sysace_fseek	stdio-wrapper.h	74;"	d
sysace_ftell	stdio-wrapper.c	/^long sysace_ftell(SYSACE_FILE *stream)$/;"	f
sysace_ftell	stdio-wrapper.h	73;"	d
sysace_fwrite	stdio-wrapper.h	72;"	d
sysace_putc	stdio-wrapper.c	/^int sysace_putc(int c, SYSACE_FILE *stream)$/;"	f
sysace_putc	stdio-wrapper.h	76;"	d
total_nodes	haar.h	/^    int total_nodes;$/;"	m	struct:myCascade
width	haar.h	/^    int width;$/;"	m	struct:__anon1
width	haar.h	/^    int width;$/;"	m	struct:__anon2
width	image.h	/^	int width;$/;"	m	struct:__anon3
width	image.h	/^	int width;$/;"	m	struct:__anon4
writePgm	image.c	/^int writePgm(char *fileName, MyImage *image)$/;"	f
x	haar.h	/^    int x;$/;"	m	struct:MyPoint
x	haar.h	/^    int x;$/;"	m	struct:__anon2
xil_printf	stdio-wrapper.h	80;"	d
y	haar.h	/^    int y;$/;"	m	struct:MyPoint
y	haar.h	/^    int y;$/;"	m	struct:__anon2
